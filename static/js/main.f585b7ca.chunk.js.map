{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/Container/Container.jsx","components/dataFile/defaultPhoto.jpg","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","Profile","avatar","name","tag","location","stats","style","profile","description","src","alt","labal","quantity","followers","views","likes","defaultProps","defaultPhoto","Statistics","title","statistics","statList","map","id","label","percentage","item","FriendsList","friends","e","isOnline","onLine","ofLine","width","PropTypes","arrayOf","shape","TransactionHistory","items","transactionHistory","tr","type","amount","currency","td","propTyps","stringisRequired","string","isRequired","App","user","statData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f585b7ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2fqMg\",\"description\":\"Profile_description__1683p\",\"avatar\":\"Profile_avatar__3enhp\",\"name\":\"Profile_name__3h9oT\",\"tag\":\"Profile_tag__2zxPU\",\"location\":\"Profile_location__3oebJ\",\"stats\":\"Profile_stats__uuCOB\",\"label\":\"Profile_label__1UZp7\",\"quantity\":\"Profile_quantity__17E9T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__24Rnw\",\"th\":\"TransactionHistory_th__1tQnY\",\"td\":\"TransactionHistory_td__39Pqo\",\"tr\":\"TransactionHistory_tr__1lNGi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"FriendList_friends__2wL1b\",\"item\":\"FriendList_item__3Vwqd\",\"status\":\"FriendList_status__9po_q\",\"onLine\":\"FriendList_onLine__1rupp FriendList_status__9po_q\",\"ofLine\":\"FriendList_ofLine__2Sg3W FriendList_status__9po_q\",\"avatar\":\"FriendList_avatar__u0yfa\",\"name\":\"FriendList_name__1lrfz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1Rhqk\",\"title\":\"Statistics_title__3pOaT\",\"statList\":\"Statistics_statList__3EkgE\",\"item\":\"Statistics_item__1XZ2W\"};","import React from 'react';\nimport './Container.css'\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;","export default __webpack_public_path__ + \"static/media/defaultPhoto.315ae089.jpg\";","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport defaultPhoto from '../dataFile/defaultPhoto.jpg';\nimport style from './Profile.module.css'\n\n\n\nconst Profile = ({avatar, name, tag, location, stats}) => {\n  return (\n    <div className={ style.profile} >\n    <div className={style.description}>\n      <img\n        src={avatar}\n        alt=\"Аватар пользователя\"\n      className={style.avatar}\n      />\n      <p className={style.name}>{name}</p>\n      <p className={style.tag}> @{tag} </p>\n        <p className={style.location}>{location}</p>\n      </div>\n    \n      <ul className={style.stats}>\n        <li>\n          <span className={style.labal}>Followers</span>\n          <span className={style.quantity}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className={style.labal}>Views</span>\n          <span className=\"quantity\">{stats.views}</span>\n        </li>\n        <li>\n          <span className={style.labal}>Likes</span>\n          <span className={style.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n );\n};\n\nProfile.defaultProps = {\n  avatar: defaultPhoto,\n};\n\nProfile.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  })\n};\n\nexport default Profile;","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport style from './Statistics.module.css'\n\n\nconst Statistics = ({ title, stats }) => {\n    return (\n        <section className={style.statistics}>\n            {{ title } && <h2 className={style.title}>{title}</h2>}\n\n            <ul className={style.statList}>\n                {stats.map(({ id, label, percentage }) => {\n                    return (\n                        <li className={style.item}key={id}>\n        <span className=\"label\">{label}</span>\n        <span className={style.percentage}>{percentage}%</span>\n      </li>)\n                })\n                }\n\n            </ul>\n        </section>\n    )\n};\n\nStatistics.defaultProps = {\n    title: \"\",\n};\n\nStatistics.propTypes = {\n    title: PropTypes.string,\n    stats: PropTypes.arrayOf(\n        PropTypes.shape({\n        id: PropTypes.string,\n        lable: PropTypes.string,\n        percentage: PropTypes.number,\n        })\n    ).isRequired,\n};\n\nexport default Statistics;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport defaultPhoto from '../dataFile/defaultPhoto.jpg';\nimport style from './FriendList.module.css';\n\nconst FriendsList = ({friends}) =>(\n    <ul className={style.friends} >\n        {friends.map(e => {\n            return (\n               <li className={style.item} key={e.id}>\n                    <span className={e.isOnline?style.onLine : style.ofLine}>{ e.isOnline}</span>\n                <img className={style.avatar} src={e.avatar} alt={e.name} width=\"48\" />\n                <p className={style.name}>{e.name} </p>\n                </li>)}\n        )}       \n        </ul>);\n\n\n\nFriendsList.defaultProps = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: defaultPhoto,\n    })\n  ),\n};\n\nFriendsList.propTypes = {\n    friends: PropTypes.arrayOf(\n        PropTypes.shape({\n        avatar: PropTypes.string,\n        id: PropTypes.number.isRequired,\n        isOnline: PropTypes.bool.isRequired,\n        name: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n};\n\nexport default FriendsList;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport style from './TransactionHistory.module.css'\n\n\nconst TransactionHistory = ({items}) => {\n    return (\n        <table className={style.transactionHistory}>\n            <thead>\n                <tr >\n                    <th className={style.tr}>Type</th>\n                    <th className={style.tr}>Amount</th>\n                    <th className={style.tr}>Currency</th>\n                </tr>\n            </thead>\n            <tbody>\n                {items.map(({ id, type, amount, currency }) => {\n                    return (\n                        <tr className={style.tr} key={id}>\n                            <td className={style.td}>{type}</td>\n                            <td className={style.td}>{amount}</td>\n                            <td className={style.td}>{currency}</td>\n                        </tr>)\n                })}\n            </tbody>\n        </table>\n    )\n};\n\n\nTransactionHistory.propTyps = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.stringisRequired,\n            type: PropTypes.string.isRequired,\n            amount: PropTypes.string.isRequired,\n            currency: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\n\nimport Container from './components/Container/Container';\n\nimport Profile from './components/Profile/Profile';\nimport user from './components/dataFile/user';\n\nimport Statistics from './components/Statistics/Statistics';\nimport statData from './components/dataFile/statistical-data';\n\nimport FriendsList from './components/FriendList/FriendList';\nimport friends from './components/dataFile/friends.json';\n\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport items from './components/dataFile/transactions.json';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Container>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n        />\n      <Statistics title=\"Upload stats\" stats={statData} />\n      <Statistics stats={statData} />\n      <FriendsList friends={friends} />\n      <TransactionHistory  items={items}/>      \n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}